<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Support\Facades\DB;

class CreateOutstandingFunctions extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        DB::unprepared("
CREATE FUNCTION `OUTSTANDINGASON`(`V_ACCCODE` CHAR(15), `V_DATE` DATETIME, `V_PDC` ENUM('Yes','No'), `V_OUTSTANDING` ENUM('Normal','Overdue','Critical'))
RETURNS decimal(24,4)
BEGIN
DECLARE V_AMT DECIMAL(24,4);
	SELECT IFNULL(SUM(AMT*SIGN),0)  INTO V_AMT
	FROM bill_data D
	WHERE  ACCCODE = V_ACCCODE
	AND CANCEL ='No' AND DATE(DOCDATE)<=V_DATE
	AND ( V_PDC  = 'Yes' Or CASE TYPE WHEN 'System' THEN 'Normal' ELSE CASE PDCSTATUS(COCODE,BRCODE,FYCODE,FNCODE,DOCNO,SRNO,V_DATE)
		WHEN 'Pending' THEN TYPE ELSE 'Normal' END END <>'PostDated')
	AND ( V_OUTSTANDING = 'Normal'
	OR	V_OUTSTANDING = 'Overdue' AND  BILLNO IN (SELECT BILLNO FROM bill_data WHERE ACCCODE = D.ACCCODE
		AND BILL_TYPE = 'Original' AND DUEDATE<V_DATE)
	OR	V_OUTSTANDING = 'Critical' AND  BILLNO IN (SELECT BILLNO FROM bill_data WHERE ACCCODE = D.ACCCODE
		AND BILL_TYPE = 'Original' AND DATE_ADD(DUEDATE, INTERVAL 4 DAY )<V_DATE))	;
    RETURN V_AMT;
END        
        ");

        DB::unprepared("
CREATE FUNCTION `PDCSTATUS`( `V_COCODE` CHAR(5), `V_BRCODE` CHAR(5), `V_FYCODE` CHAR(5), `V_FNCODE` CHAR(5), `V_DOCNO` CHAR(20), `V_SRNO` DECIMAL(10), `V_DATE` DATETIME )
RETURNS enum('Approved','Pending','Rejected')
BEGIN
DECLARE V_CHQSTATUS ENUM('Approved', 'Pending', 'Rejected');
DECLARE V_PROCESSEDDATE DATETIME;
	SELECT CHQ_STATUS,PROCESSEDDATE INTO V_CHQSTATUS,V_PROCESSEDDATE FROM cheque_details WHERE COCODE = V_COCODE AND BRCODE = V_BRCODE
		AND FYCODE = V_FYCODE AND FNCODE = V_FNCODE AND DOCNO = V_DOCNO AND SRNO =V_SRNO
		ORDER BY VERSION DESC LIMIT 1;
	IF V_CHQSTATUS = 'Pending' THEN
		RETURN V_CHQSTATUS;
	ELSE
		IF V_DATE < V_PROCESSEDDATE THEN
			RETURN 'Pending';
		ELSE
			RETURN V_CHQSTATUS;
		END IF;
	END IF;
END
        ");

        DB::unprepared("
CREATE FUNCTION `PROCESSEDDATE`( `V_COCODE` CHAR(5), `V_BRCODE` CHAR(5), `V_FYCODE` CHAR(5), `V_FNCODE` CHAR(5), `V_DOCNO` CHAR(20), `V_SRNO` DECIMAL(10), `V_DATE` DATETIME )
RETURNS datetime
BEGIN
DECLARE V_CHQSTATUS ENUM('Approved', 'Pending', 'Rejected');
DECLARE V_TYPE ENUM('System','Normal','PostDated');
DECLARE V_DOCDATE DATETIME;
DECLARE V_PROCESSEDDATE DATETIME;
	SELECT TYPE,DOCDATE INTO V_TYPE,V_DOCDATE FROM d_data WHERE COCODE = V_COCODE AND BRCODE = V_BRCODE
		AND FYCODE = V_FYCODE AND FNCODE = V_FNCODE AND DOCNO = V_DOCNO AND SRNO =V_SRNO;
	IF V_TYPE = 'System' OR V_TYPE = 'Normal' THEN 
		RETURN V_DOCDATE;
	END IF;
	
	SELECT CHQ_STATUS,PROCESSEDDATE INTO V_CHQSTATUS,V_PROCESSEDDATE FROM cheque_details WHERE COCODE = V_COCODE AND BRCODE = V_BRCODE
		AND FYCODE = V_FYCODE AND FNCODE = V_FNCODE AND DOCNO = V_DOCNO AND SRNO =V_SRNO
		ORDER BY VERSION DESC LIMIT 1;
	IF V_CHQSTATUS = 'Pending' THEN
		RETURN V_DOCDATE;
	ELSE
		IF V_DATE < V_PROCESSEDDATE THEN
			RETURN V_DOCDATE;
		ELSE
			RETURN V_PROCESSEDDATE;
		END IF;
	END IF;
END
        ");
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        DB::unprepared('DROP FUNCTION `OUTSTANDINGASON`');
        DB::unprepared('DROP FUNCTION `PDCSTATUS`');
        DB::unprepared('DROP FUNCTION `PROCESSEDDATE`');
    }
}
